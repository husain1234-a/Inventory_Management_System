openapi: 3.0.3
info:
  title: Inventory Management System API
  description: |
    API for the Inventory Management System. This API provides endpoints for managing products,
    inventory, suppliers, transactions and user authentication.
  version: 1.0.0
  contact:
    name: IMS Support
    email: support@ims.com

servers:
  - url: http://localhost:8000
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Bearer Token Authentication

  schemas:
    Error:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum: [error]
          default: error
        message:
          type: string
          minLength: 1
          maxLength: 500
      additionalProperties: false

    Product:
      type: object
      required:
        - name
        - description
        - price
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 500
        price:
          type: number
          format: float
          minimum: 0
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Inventory:
      type: object
      required:
        - product_id
        - quantity
      properties:
        id:
          type: integer
          format: int64
        product_id:
          type: integer
          format: int64
        quantity:
          type: integer
          minimum: 0
        last_updated:
          type: string
          format: date-time

    Supplier:
      type: object
      required:
        - name
        - contact_info
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          minLength: 1
          maxLength: 100
        contact_info:
          type: string
          maxLength: 200
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Transaction:
      type: object
      required:
        - product_id
        - quantity
        - transaction_type
      properties:
        id:
          type: integer
          format: int64
        product_id:
          type: integer
          format: int64
        quantity:
          type: integer
        transaction_type:
          type: string
          enum: [in, out]
        transaction_date:
          type: string
          format: date-time

  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            message: Unauthorized access

    BadRequestError:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            message: Invalid request parameters

    NotFoundError:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            status: error
            message: Resource not found

paths:
  /products:
    get:
      summary: Get all products
      description: Retrieves a list of all products
      operationId: getProducts
      tags:
        - Products
      responses:
        '200':
          description: List of products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create a new product
      description: Creates a new product in the system
      operationId: createProduct
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /inventory:
    get:
      summary: Get inventory status
      description: Retrieves current inventory levels for all products
      operationId: getInventory
      tags:
        - Inventory
      responses:
        '200':
          description: Inventory status retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /suppliers:
    get:
      summary: Get all suppliers
      description: Retrieves a list of all suppliers
      operationId: getSuppliers
      tags:
        - Suppliers
      responses:
        '200':
          description: List of suppliers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transactions:
    post:
      summary: Record a new transaction
      description: Records a new inventory transaction (in/out)
      operationId: createTransaction
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transaction recorded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'

tags:
  - name: Products
    description: Product management endpoints
  - name: Inventory
    description: Inventory management endpoints
  - name: Suppliers
    description: Supplier management endpoints
  - name: Transactions
    description: Transaction management endpoints

security:
  - BearerAuth: []